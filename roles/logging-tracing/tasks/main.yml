---
# Logging and Tracing Role - Main Tasks
# =====================================
# Deploys ELK Stack (Elasticsearch, Logstash, Kibana) + Jaeger for distributed tracing
# Optimized for POC environment with resource constraints

- name: Create logging-tracing namespace
  shell: /var/lib/rancher/rke2/bin/kubectl create namespace {{ logging_namespace }} --dry-run=client -o yaml | /var/lib/rancher/rke2/bin/kubectl apply -f -
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  tags:
    - logging
    - tracing
    - namespace

- name: Add Elastic Helm repository
  shell: |
    export PATH=/usr/local/bin:$PATH
    /usr/local/bin/helm repo add elastic https://helm.elastic.co
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  tags:
    - logging
    - helm

- name: Add Jaeger Helm repository
  shell: |
    export PATH=/usr/local/bin:$PATH
    /usr/local/bin/helm repo add jaegertracing https://jaegertracing.github.io/helm-charts
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  tags:
    - tracing
    - helm

- name: Update Helm repositories
  shell: |
    export PATH=/usr/local/bin:$PATH
    /usr/local/bin/helm repo update
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  tags:
    - logging
    - tracing
    - helm

# Deploy Elasticsearch
- name: Deploy Elasticsearch
  shell: |
    export PATH=/usr/local/bin:$PATH
    /usr/local/bin/helm upgrade --install elasticsearch elastic/elasticsearch \
      --version "{{ elasticsearch_chart_version }}" \
      --namespace "{{ logging_namespace }}" \
      --create-namespace \
      --set replicas="{{ elasticsearch_replicas }}" \
      --set minimumMasterNodes="{{ elasticsearch_min_master_nodes }}" \
      --set resources.requests.cpu="{{ elasticsearch_cpu_request }}" \
      --set resources.requests.memory="{{ elasticsearch_memory_request }}" \
      --set resources.limits.cpu="{{ elasticsearch_cpu_limit }}" \
      --set resources.limits.memory="{{ elasticsearch_memory_limit }}" \
      --set esJavaOpts="{{ elasticsearch_java_opts }}" \
      --set volumeClaimTemplate.accessModes[0]="ReadWriteOnce" \
      --set volumeClaimTemplate.storageClassName="{{ storage_class }}" \
      --set volumeClaimTemplate.resources.requests.storage="{{ elasticsearch_storage_size }}" \
      --set clusterName="{{ elasticsearch_cluster_name }}" \
      --set nodeGroup="{{ elasticsearch_node_group }}" \
      --set discovery.type=single-node \
      --set xpack.security.enabled=false \
      --set service.type=ClusterIP \
      --set ingress.enabled="{{ elasticsearch_ingress_enabled }}" \
      --set ingress.className="{{ ingress_class }}" \
      --set ingress.hosts[0].host="{{ elasticsearch_external_url }}" \
      --set ingress.hosts[0].paths[0].path="/" \
      --set ingress.hosts[0].paths[0].pathType=Prefix \
      --wait --timeout=600s
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  tags:
    - logging
    - elasticsearch

# Deploy Kibana
- name: Deploy Kibana (simplified)
  shell: |
    export PATH=/usr/local/bin:$PATH
    /usr/local/bin/helm upgrade --install kibana elastic/kibana \
      --version "{{ kibana_chart_version }}" \
      --namespace "{{ logging_namespace }}" \
      --set resources.requests.cpu="{{ kibana_cpu_request }}" \
      --set resources.requests.memory="{{ kibana_memory_request }}" \
      --set resources.limits.cpu="{{ kibana_cpu_limit }}" \
      --set resources.limits.memory="{{ kibana_memory_limit }}" \
      --set elasticsearchHosts="http://elasticsearch-master:9200" \
      --set service.type=ClusterIP \
      --set service.port=5601 \
      --set healthCheckPath="/app/kibana" \
      --set lifecycle.preStop.exec.command='["/bin/sh","-c","sleep 20"]' \
      --wait --timeout=600s
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  tags:
    - logging
    - kibana
  ignore_errors: true

# Deploy Logstash
- name: Deploy Logstash
  shell: |
    export PATH=/usr/local/bin:$PATH
    /usr/local/bin/helm upgrade --install logstash elastic/logstash \
      --version "{{ logstash_chart_version }}" \
      --namespace "{{ logging_namespace }}" \
      --set replicas="{{ logstash_replicas }}" \
      --set resources.requests.cpu="{{ logstash_cpu_request }}" \
      --set resources.requests.memory="{{ logstash_memory_request }}" \
      --set resources.limits.cpu="{{ logstash_cpu_limit }}" \
      --set resources.limits.memory="{{ logstash_memory_limit }}" \
      --set service.type=ClusterIP \
      --set service.ports[0].name=beats \
      --set service.ports[0].port=5044 \
      --set service.ports[0].protocol=TCP \
      --set service.ports[1].name=http \
      --set service.ports[1].port=8080 \
      --set service.ports[1].protocol=TCP \
      --wait --timeout=600s
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  tags:
    - logging
    - logstash

# Deploy Filebeat for log collection
- name: Deploy Filebeat DaemonSet
  shell: |
    export PATH=/usr/local/bin:$PATH
    /usr/local/bin/helm upgrade --install filebeat elastic/filebeat \
      --version "{{ filebeat_chart_version }}" \
      --namespace "{{ logging_namespace }}" \
      --set daemonset.enabled=true \
      --set resources.requests.cpu="{{ filebeat_cpu_request }}" \
      --set resources.requests.memory="{{ filebeat_memory_request }}" \
      --set resources.limits.cpu="{{ filebeat_cpu_limit }}" \
      --set resources.limits.memory="{{ filebeat_memory_limit }}" \
      --wait --timeout=600s
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  tags:
    - logging

    - filebeat

# Deploy Jaeger for distributed tracing
- name: Deploy Jaeger values file (template)
  template:
    src: roles/logging-tracing/files/jaeger-values.yaml
    dest: /tmp/jaeger-values.yaml
    mode: '0644'
  tags:
    - tracing
    - jaeger

- name: Deploy Jaeger (Helm)
  shell: |
    export PATH=/usr/local/bin:$PATH
    /usr/local/bin/helm upgrade --install jaeger jaegertracing/jaeger \
      --version "{{ jaeger_chart_version }}" \
      --namespace "{{ logging_namespace }}" \
      -f /tmp/jaeger-values.yaml \
      --wait --timeout=60s
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  tags:
    - tracing
    - jaeger
  ignore_errors: true

# Create index patterns in Kibana
- name: Wait for Kibana to be ready
  shell: /var/lib/rancher/rke2/bin/kubectl wait --for=condition=ready pod -l app=kibana -n "{{ logging_namespace }}" --timeout=300s
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  tags:
    - logging
    - kibana
  ignore_errors: true

- name: Wait for Elasticsearch indices to be created
  pause:
    seconds: 60
  tags:
    - logging
    - kibana

# Display access information
- name: Display logging and tracing access information
  debug:
    msg:
      - "=== Logging and Tracing Deployment Complete ==="
      - ""
      - "üìä Kibana (Logs Dashboard):"
      - "  Internal: http://kibana-kibana.{{ logging_namespace }}.svc.cluster.local:5601"
      - "  External: {{ 'https://' + kibana_external_url if kibana_ingress_enabled else 'Not configured' }}"
      - ""
      - "üîç Elasticsearch (Search Engine):"
      - "  Internal: http://elasticsearch-master.{{ logging_namespace }}.svc.cluster.local:9200"
      - "  External: {{ 'https://' + elasticsearch_external_url if elasticsearch_ingress_enabled else 'Not configured' }}"
      - ""
      - "üìà Jaeger (Tracing UI):"
      - "  Internal: http://jaeger-query.{{ logging_namespace }}.svc.cluster.local:16686"
      - "  External: {{ 'https://' + jaeger_external_url if jaeger_ingress_enabled else 'Not configured' }}"
      - ""
      - "üîß Configuration:"
      - "  Namespace: {{ logging_namespace }}"
      - "  Storage Class: {{ storage_class }}"
      - "  Log Retention: Based on storage capacity"
      - "  Trace Retention: {{ jaeger_max_traces }} traces in memory"
      - ""
      - "üöÄ Getting Started:"
      - "  1. Access Kibana to create index patterns"
      - "  2. Configure log dashboards"
      - "  3. Set up alerting rules"
      - "  4. Integrate applications with Jaeger for tracing"
  tags:
    - logging
    - tracing
    - info
